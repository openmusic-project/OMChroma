; OM File Header - Saved 2025/02/06 18:29:05
; (7.06 :patc (om-make-point 181 215) (om-make-point 0 0) (om-make-point 761 730) "no documentation" 183 0 nil "2025/02/06 18:29:05")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "modifications" (quote ((om-load-editor-box1 "FQL" (quote chroma::fql) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "THE-LIST" nil) (om-load-inputfun (quote input-funbox) "List of Amplitudes" "AMPLITUDES" nil) (om-load-inputfun (quote input-funbox) "List of Bandwidths" "BWL" nil))) (om-make-point 241 579) (om-make-point 166 100) (if (find-class (quote chroma::fql) nil) (make-instance (quote chroma::fql) :the-list (list 1339.3623 2104.1143 3036.4378 3825.6717 5463.7056) :amplitudes nil :bwl nil :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 400 20) (om-make-point 370 280))) t nil nil nil) (om-load-boxcomment "comment" (om-make-point 148 32) (quote "FQL / Frequencies") "" (om-make-point 497 153) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 78 28) (quote "ALL VPS") "" (om-make-point 141 512) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 148 32) (quote "SPL / symbolic pitch") "" (om-make-point 0 149) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "HIGH-PASS-FILTER" (quote high-pass-filter) (quote ((om-load-inputfun (quote input-funbox) "vps" "SELF" nil) (om-load-inputfun (quote input-funbox) "filter freq (Hz)" "FREQ" 800.0))) (om-make-point 421 257) nil nil nil nil 1) (om-load-boxcall (quote genfun) "BAND-PASS-FILTER" (quote band-pass-filter) (quote ((om-load-inputfun (quote input-funbox) "vps" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of freqs (Hz)" "FREQLIST" (list 400.0 800.0)))) (om-make-point 497 227) nil nil nil nil 1) (om-load-boxcall (quote genfun) "MAIN-PARTIALS" (quote main-partials) (quote ((om-load-inputfun (quote input-funbox) "vps" "SELF" nil) (om-load-inputfun (quote input-funbox) "threshold amp" "THRESHOLD" 0.01))) (om-make-point 365 326) nil nil nil nil 1) (om-load-boxcall (quote genfun) "N-MAIN-PARTIALS" (quote n-main-partials) (quote ((om-load-inputfun (quote input-funbox) "vps" "SELF" nil) (om-load-inputfun (quote input-funbox) "number of partials" "N" 20))) (om-make-point 483 322) nil nil nil nil 1) (om-load-boxcall (quote genfun) "STRETCH-VPS" (quote stretch-vps) (quote ((om-load-inputfun (quote input-funbox) "vps" "SELF" nil) (om-load-inputfun (quote input-funbox) "stretching factor" "FACT" 2))) (om-make-point 329 491) nil nil nil nil 1) (om-load-boxcall (quote genfun) "PITCH-TRANSPOSE" (quote pitch-transpose) (quote ((om-load-inputfun (quote input-funbox) "vps" "SELF" nil) (om-load-inputfun (quote input-funbox) "stretching factor" "RATIO" 5))) (om-make-point 232 490) nil nil nil nil 1) (om-load-boxcall (quote genfun) "XPOSE-BEGIN" (quote xpose-begin) (quote ((om-load-inputfun (quote input-funbox) "symbolic pitch list" "SELF" nil))) (om-make-point 49 279) nil nil nil nil 1) (om-load-boxcall (quote genfun) "XPOSE-END" (quote xpose-end) (quote ((om-load-inputfun (quote input-funbox) "symbolic pitch list" "SELF" nil))) (om-make-point 166 267) nil nil nil nil 1) (om-load-boxcall (quote genfun) "REVERT-VPS" (quote revert-vps) (quote ((om-load-inputfun (quote input-funbox) "symbolic pitch list" "SELF" nil))) (om-make-point 19 214) nil nil nil nil 1) (om-load-boxcall (quote genfun) "LOW-PASS-FILTER" (quote low-pass-filter) (quote ((om-load-inputfun (quote input-funbox) "vps" "SELF" nil) (om-load-inputfun (quote input-funbox) "filter freq (Hz)" "FREQ" 800.0))) (om-make-point 344 228) nil nil nil nil 1) (om-load-editor-box1 "SPL1" (quote chroma::spl) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "THE-LIST" (list (quote chroma::do2) (quote chroma::do3) (quote chroma::do5))))) (om-make-point 25 357) (om-make-point 201 79) (if (find-class (quote chroma::spl) nil) (make-instance (quote chroma::spl) :the-list (list (append nil (cons "DO4" 0.0)) (append nil (cons "FAd4" 0.0)) (append nil (cons "SI4" 0.0)) (append nil (cons "FA5" 0.0)) (append nil (cons "DOd6" 0.0))) :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 400 20) (om-make-point 370 280))) t nil nil t) (om-load-boxcall (quote genfun) "MIRROR-VPS" (quote mirror-vps) (quote ((om-load-inputfun (quote input-funbox) "symbolic pitch list" "SELF" nil))) (om-make-point 111 215) nil nil nil nil 1) (om-load-editor-box1 "SPL" (quote chroma::spl) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "THE-LIST" (list (quote chroma::do2) (quote chroma::do3) (quote chroma::do5))))) (om-make-point 159 113) (om-make-point 70 50) (if (find-class (quote chroma::spl) nil) (make-instance (quote chroma::spl) :the-list (list (quote do4) (quote lab4) (quote re5) (quote sol5) (quote reb6)) :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 400 20) (om-make-point 633 511))) nil nil nil nil) (om-load-editor-box1 "FQL" (quote chroma::fql) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "THE-LIST" nil) (om-load-inputfun (quote input-funbox) "List of Amplitudes" "AMPLITUDES" nil) (om-load-inputfun (quote input-funbox) "List of Bandwidths" "BWL" nil))) (om-make-point 307 105) (om-make-point 171 83) (if (find-class (quote chroma::fql) nil) (make-instance (quote chroma::fql) :the-list (list 267.87247 420.82285 607.28754 765.13434 1092.7411) :amplitudes (list 1.0 0.5011872 1.0 0.14125374 0.1) :bwl (list 23 34 56 67 78) :from-file t)) nil nil (pairlis (quote (winpos winsize)) (list (om-make-point 400 20) (om-make-point 370 280))) t nil nil nil) (om-load-boxcall (quote bastype) "list211" (quote list) (quote nil) (om-make-point 544 77) (om-make-point 122 27) (list 23 34 56 67 78) "(23 34 56 67 78)" nil) (om-load-boxcall (quote bastype) "list21" (quote list) (quote nil) (om-make-point 460 55) (om-make-point 122 27) (list 0 -6 13 -17 -20) "(0 -6 13 -17 -20)" nil) (om-load-boxcall (quote bastype) "list2" (quote list) (quote nil) (om-make-point 268 57) (om-make-point 180 39) (list 267.87247 420.82285 607.28754 765.13434 1092.7411) "(267.87247 420.82285 607.28754 765.13434 1092.7411)" nil) (om-load-boxcomment "comment" (om-make-point 322 45) (quote "Modifications to VPS") "" (om-make-point 237 0) nil (om-make-color 0.6 0.4 0.2) (om-make-font "Arial" 24 :family "Arial" :style (quote (:bold)) :mode (quote nil))) (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 93 71) (om-make-point 155 28) (list (quote do4) (quote lab4) (quote re5) (quote sol5) (quote reb6)) "(DO4 LAb4 RE5 SOL5 REb6)" nil))) (quote ((9 0 0 0 nil 0) (17 0 9 0 nil 0) (17 0 13 0 nil 0) (15 0 14 0 nil 0) (16 0 15 0 nil 0) (22 0 16 1 nil 0) (20 0 17 1 nil 0) (19 0 17 2 nil 0) (18 0 17 3 nil 0))) nil 6.023))
