; OM File Header - Saved 2025/02/06 18:38:13
; (7.06 :patc (om-make-point 284 215) (om-make-point 0 0) (om-make-point 605 548) "no documentation" 183 0 nil "2025/02/06 18:38:13")
; End File Header
(in-package :om)(load-lib-for (quote ("OMChroma")))(setf *om-current-persistent* (om-load-patch1 "vps_vps-gen" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 134 56) (quote "VPS SPECTRUM GENERATION") "" (om-make-point 171 41) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 395 165) (om-make-point 25 28) 0.0 "0.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GEN-SPSHT" (quote gen-spsht) (quote ((om-load-inputfun (quote input-funbox) "f0" "F0" 100) (om-load-inputfun (quote input-funbox) "n partials" "NP" 10) (om-load-inputfun (quote input-funbox) "shift" "SH" 0.0) (om-load-inputfun (quote input-funbox) "stretch" "ST" 2.0) (om-load-inputfun (quote input-funbox) "detune" "RAN" 0.0))) (om-make-point 254 194) (om-make-point 170 60) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list1" (quote list) (quote nil) (om-make-point 239 143) (om-make-point 29 24) 100 "100" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "FQL1" (quote chroma::fql) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "THE-LIST" nil) (om-load-inputfun (quote input-funbox) "List of Amplitudes" "AMPLITUDES" nil) (om-load-inputfun (quote input-funbox) "List of Bandwidths" "BWL" nil))) (om-make-point 200 287) (om-make-point 263 99) (when (find-class (quote chroma::fql) nil) (let ((rep (make-instance (quote chroma::fql)))) (setf (chroma::the-list rep) (quote (535.74494 602.7131 656.4895 703.1653 745.1842 783.82984 819.8784 853.8435 886.08606 916.87195))) (setf (chroma::fql rep) (quote (535.74494 602.7131 656.4895 703.1653 745.1842 783.82984 819.8784 853.8435 886.08606 916.87195))) (setf (chroma::amplitudes rep) (quote nil)) (setf (chroma::bwl rep) (quote nil)) rep)) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 540 390) (om-make-point 734 45))) t nil nil nil (quote nil)))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux5" (quote t) (quote nil) (om-make-point 358 147) (om-make-point 21 26) 1.5 "1.5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 328 133) (om-make-point 23 25) 3.0 "3.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 302 156) (om-make-point 19 28) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 173 161) (om-make-point 61 28) (append nil (cons (quote do3) 33)) "(Do3 . 33)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((8 0 2 0 nil 0) (7 0 2 1 nil 0) (6 0 2 2 nil 0) (5 0 2 3 nil 0) (1 0 2 4 nil 0) (2 0 4 0 nil 0))) nil 7.06))
