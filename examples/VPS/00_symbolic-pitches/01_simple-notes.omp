; OM File Header - Saved 2025/02/06 17:52:29
; (7.06 :patc (om-make-point 187 241) (om-make-point 0 0) (om-make-point 666 561) "" 183 0 nil "2025/02/06 17:52:29")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "01_simple-notes" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 417 217) (om-make-point 52 30) 442.0 "442.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 344 193) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SET-GBL" (quote chroma::set-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil) (om-load-inputfun (quote input-funbox) "VAL" "VAL" nil))) (om-make-point 381 245) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 378 113) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "GET-GBL" (quote chroma::get-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil))) (om-make-point 358 143) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "PCH->FQ 2" (quote pch->fq) (quote ((om-load-inputfun (quote input-funbox) "NOTE" "NOTE" nil))) (om-make-point 149 309) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 39 271) (om-make-point 254 30) (list (quote c4) (quote cs4) (quote d4) (quote eb4) (quote e4) (quote f4) (quote fs4) (quote g) (quote ab4) (quote a4) (quote bb4) (quote b4)) "(c4 cs4 d4 eb4 e4 f4 fs4 g ab4 a4 bb4 b4)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 3 165) (om-make-point 330 30) (list (quote do4) (quote dod4) (quote re4) (quote mib4) (quote mi4) (quote fa4) (quote fad4) (quote sol4) (quote lab4) (quote la4) (quote sib4) (quote si4)) "(do4 dod4 re4 mib4 mi4 fa4 fad4 sol4 lab4 la4 sib4 si4)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "PCH->FQ" (quote pch->fq) (quote ((om-load-inputfun (quote input-funbox) "NOTE" "NOTE" nil))) (om-make-point 138 205) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 272 60) (quote "SIMPLE NOTES: NAME(italian/english)OCT$A4 = middle a$ex: do4 dod4 re4 red4, g") "" (om-make-point 9 100) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 352 45) (quote "NB: Functions and variables should be preceded by cr::$      Flats = b, sharp = d or s") "" (om-make-point 87 32) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 277 42) (quote "SIMPLE (CHROMATIC) NOTES") "" (om-make-point 114 1) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Arial" 18.0D0 :family "Arial" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 2 0 nil 0) (0 0 2 1 nil 0) (3 0 4 0 nil 0) (6 0 5 0 nil 0) (7 0 8 0 nil 0))) nil 7.06))
