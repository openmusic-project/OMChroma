; OM File Header - Saved 2025/02/06 17:56:03
; (7.06 :patc (om-make-point 106 279) (om-make-point 0 0) (om-make-point 735 659) "" 183 0 nil "2025/02/06 17:56:03")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "03_simple-intervals" (quote ((let ((box (om-load-boxcomment "comment 4" (om-make-point 136 90) (quote "NB: in this case,$the reference of the$n+1 interval$will be the result$of the nth interval") "" (om-make-point 277 342) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 120 412) (om-make-point 109 30) (list (quote 2-) 4 (quote 5-) (quote 4+) (quote -7-)) "(2- 4 5- 4+ -7-)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->SEMITONES 2" (quote itvl->semitones) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil))) (om-make-point 124 445) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 48 413) (om-make-point 32 30) (quote 2-) "2-" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->SEMITONES" (quote itvl->semitones) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil))) (om-make-point 14 446) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "EVAL" (quote eval) (quote ((om-load-inputfun (quote input-funbox) "EXP" "EXP" nil))) (om-make-point 523 292) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 457 256) (om-make-point 168 30) (quote chroma::*intervalles-alist*) "cr::*INTERVALLES-ALIST*" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 391 431) (om-make-point 34 30) (quote a4) "a4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 280 432) (om-make-point 98 30) (list (quote 2-) (quote 2+) (quote 3-) (quote 3+)) "(2- 2+ 3- 3+)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->PCH 2" (quote itvl->pch) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil) (om-load-inputfun (quote input-funbox) "NOTE" "NOTE" nil))) (om-make-point 335 479) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 155 75) (quote "Compute an interval of$minor second starting$from a4$(two pitches a result)") "" (om-make-point 184 223) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 229 298) (om-make-point 34 30) (quote a4) "a4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 187 300) (om-make-point 32 30) (quote 2-) "2-" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->PCH" (quote itvl->pch) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil) (om-load-inputfun (quote input-funbox) "NOTE" "NOTE" nil))) (om-make-point 195 340) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 156 45) (quote "Descending intervals:$-2-, -2+, -3-, -3+, etc.") "" (om-make-point 8 314) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 417 217) (om-make-point 52 30) 442.0 "442.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 344 193) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SET-GBL" (quote chroma::set-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil) (om-load-inputfun (quote input-funbox) "VAL" "VAL" nil))) (om-make-point 381 245) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 378 113) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "GET-GBL" (quote chroma::get-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil))) (om-make-point 358 143) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 352 45) (quote "NB: Functions and variables should be preceded by cr::$      Flats = b, sharp = d or s") "" (om-make-point 87 32) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 317 42) (quote "SIMPLE (CHROMATIC) INTERVALS") "" (om-make-point 114 1) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Arial" 18.0D0 :family "Arial" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((1 0 2 0 nil 0) (3 0 4 0 nil 0) (6 0 5 0 nil 0) (8 0 9 0 nil 0) (7 0 9 1 nil 0) (12 0 13 0 nil 0) (11 0 13 1 nil 0) (16 0 17 0 nil 0) (15 0 17 1 nil 0) (18 0 19 0 nil 0))) nil 7.06))
