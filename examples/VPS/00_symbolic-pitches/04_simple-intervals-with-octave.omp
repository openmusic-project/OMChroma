; OM File Header - Saved 2025/02/06 17:57:41
; (7.06 :patc (om-make-point 90 198) (om-make-point 0 0) (om-make-point 832 677) "" 183 0 nil "2025/02/06 17:57:41")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "04_simple-intervals-with-octave" (quote ((let ((box (om-load-boxcomment "comment 6" (om-make-point 202 204) (quote "CAUTION:$1)$To avoid misunderstandings,$single intervals with octave$should be placed inside a list$$2)$Simple intervals within the octave$can be expressed in this way$with 0$Ex: 2+ = (2+ 0)") "" (om-make-point 9 176) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 5" (om-make-point 220 119) (quote "Intervals larger than ±major seventh$are expressed as a list:$(ITVL OCT)$Ex: (2- 1) = minor ninth$(or minor second + 1 octave)$Octaves can be + or -") "" (om-make-point 11 68) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 4" (om-make-point 127 102) (quote "NB: in this case,$the reference of the$n+1 interval$will be the result$of the nth interval") "" (om-make-point 482 332) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 120 412) (om-make-point 224 30) (list (list (quote 2-) 2) (list -4 -2) (list (quote 5-) 2) (list (quote 4+) 3) (list (quote -7-) 0)) "((2- 2) (-4 -2) (5- 2) (4+ 3) (-7- 0))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->SEMITONES 2" (quote itvl->semitones) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil))) (om-make-point 182 454) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 44 406) (om-make-point 68 30) (list (list (quote 2-) -1)) "((2- -1))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->SEMITONES" (quote itvl->semitones) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil))) (om-make-point 14 446) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "EVAL" (quote eval) (quote ((om-load-inputfun (quote input-funbox) "EXP" "EXP" nil))) (om-make-point 643 292) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 577 256) (om-make-point 168 30) (quote chroma::*intervalles-alist*) "cr::*INTERVALLES-ALIST*" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 634 446) (om-make-point 34 30) (quote a4) "a4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 429 438) (om-make-point 191 30) (list (list (quote 2-) 1) (list (quote 2+) -1) (list (quote 3-) 2) (list (quote 3+) -2)) "((2- 1) (2+ -1) (3- 2) (3+ -2))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->PCH 2" (quote itvl->pch) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil) (om-load-inputfun (quote input-funbox) "NOTE" "NOTE" nil))) (om-make-point 565 479) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 143 85) (quote "Compute an interval of$minor ninth starting$from a4$(two pitches a result)") "" (om-make-point 294 253) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 391 328) (om-make-point 34 30) (quote a4) "a4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 297 330) (om-make-point 63 30) (list (list (quote 2-) 1)) "((2- 1))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "ITVL->PCH" (quote itvl->pch) (quote ((om-load-inputfun (quote input-funbox) "INT" "INT" nil) (om-load-inputfun (quote input-funbox) "NOTE" "NOTE" nil))) (om-make-point 323 363) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 537 217) (om-make-point 52 30) 442.0 "442.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 464 193) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SET-GBL" (quote chroma::set-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil) (om-load-inputfun (quote input-funbox) "VAL" "VAL" nil))) (om-make-point 501 245) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 498 113) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "GET-GBL" (quote chroma::get-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil))) (om-make-point 478 143) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 317 63) (quote "SIMPLE (CHROMATIC) INTERVALS$(ABOVE THE SEVENTH)") "" (om-make-point 114 1) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Arial" 18.0D0 :family "Arial" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((3 0 4 0 nil 0) (5 0 6 0 nil 0) (8 0 7 0 nil 0) (10 0 11 0 nil 0) (9 0 11 1 nil 0) (14 0 15 0 nil 0) (13 0 15 1 nil 0) (17 0 18 0 nil 0) (16 0 18 1 nil 0) (19 0 20 0 nil 0))) nil 7.06))
