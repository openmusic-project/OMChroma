; OM File Header - Saved 2025/02/06 17:49:14
; (7.06 :patc (om-make-point 10 10) (om-make-point 0 0) (om-make-point 741 571) "" 183 0 nil "2025/02/06 17:49:13")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "00_README" (quote ((let ((box (om-load-boxcomment "comment 4" (om-make-point 326 119) (quote "To convert from one unit (pitch, midi, interval, ratio, etc.)$to another use the conversion functions.$NOTE:$conversions from a relative unit (like semitones$or intervals) to an absolute one (like pitch or MIDI)$require a starting reference.") "" (om-make-point 73 152) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 316 51) (quote "Symbolic pitches [NOTEs] and Intervals use a specific$notation thoroughly explained in the following patches") "" (om-make-point 72 114) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 236 60) (quote "DIAPASON is an OMChroma variable$that can be accessed and modified$with the functions below") "" (om-make-point 77 328) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 252 413) (om-make-point 52 30) 442.0 "442.0" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 179 389) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SET-GBL" (quote chroma::set-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil) (om-load-inputfun (quote input-funbox) "VAL" "VAL" nil))) (om-make-point 216 441) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 81 390) (om-make-point 90 30) (quote chroma::diapason) "cr::diapason" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "GET-GBL" (quote chroma::get-gbl) (quote ((om-load-inputfun (quote input-funbox) "VAR" "VAR" nil))) (om-make-point 81 439) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 352 45) (quote "NB: Functions and variables should be preceded by cr::$      Flats = b, sharp = d or s") "" (om-make-point 72 73) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 345 84) (quote "                 OMCHROMA$SYMBOLIC PITCHES AND INTERVALS$(USED IN THE VPS SYSTEM)") "" (om-make-point 80 0) nil (om-make-color 1.1086464E-4 0.0017602444 0.9982184) (om-make-font "Arial" 18.0D0 :family "Arial" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 5 0 nil 0) (3 0 5 1 nil 0) (6 0 7 0 nil 0))) nil 7.06))
